language: python

cache:
  directories:
  - "~/.platformio"

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - g++-4.8
            - cmake


install:
- export LCOV_ROOT="$HOME/lcov"
- mkdir -p "$LCOV_ROOT"
- wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.12.orig.tar.gz --output-document="$LCOV_ROOT/lcov.tar.gz"
- tar xf "$LCOV_ROOT/lcov.tar.gz" --strip-components=1 -C $LCOV_ROOT
- export PATH="$LCOV_ROOT/bin:$PATH"
- which lcov
- pip install -U platformio
- gem install coveralls-lcov
- export GENERATE_COVERAGE=1

env:
- BOARD=uno
- BOARD=leonardo
- BOARD=megaatmega2560
- BOARD=due
- BOARD=nanoatmega328
- BOARD=nanoatmega168
- BOARD=zero
- BOARD=micro

script:
- set -eo pipefail;
  for e in examples/*; do
    platformio ci --board=$BOARD --lib=. $e/*;
  done

after_success:
    - |
        if [ "${GENERATE_COVERAGE}" ]; then
            # Generate code coverage information & send to Coveralls
            lcov --gcov-tool $GCOV --directory . --capture --output-file coverage.info
            lcov --gcov-tool $GCOV --remove coverage.info 'test/*' '/usr/*' 'external/*' --output-file coverage.info
            lcov --list coverage.info
            coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info
        fi

notifications:
    email: false
